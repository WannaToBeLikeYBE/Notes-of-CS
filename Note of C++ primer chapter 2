第二章也是一些基础内容
2.1 基本内置类型
tips
1.执行浮点数运算选择double，这是因为float通常精度不够而且双精度浮点数和单精度浮点数的计算代价相差无几。
2.注意不要混用带符号类型和无符号类型，做这事因为带符号数会自动转换为无符号数。
3.浮点型字面值默认为double，十进制字面值默认带符号，而八进制（0开头）和十六进制（0x^0X)可能带符号也可能不带。
4.泛化的转义序列：其形式为\x后跟一个或多个十六进制数字，或者\后跟3个以内的八进制数字，其数字部分表示的是字符对应的数值。
5.可以通过前缀和后缀改变字面值的默认类型，详见书P37。

2.2变量
tips
1.对象与变量 对象的概念：具有某种数据类型的内存空间。
2.初始化不是赋值
3.列表初始化：用花括号来初始化变量
  eg.int unit_sold{1};
  当使用列表初始化的时候，如果初始值存在丢失信息的风险，则编译器将报错。
  eg.int a{3.14159260};
4.声明创建了名字，定义创造与名字关联的实体
  如果想声明变量并且不定义它，就在变量名前添加关键字extern并且不要显式定义它
  eg.extern int i;
5.名字的作用域：Cpp中大多数作用域以花括号分隔。函数体外的名字拥有全局定义域，其他则拥有块定义域。
  当新建同名局部变量时，在其作用域内会暂时覆盖全局变量
  eg.int a=0;
   int main()
   {
      int a =1;
      cout<<a<<endl;  //输出1
      cout<<::a<<endl; //输出0
   }
   因为全局定义域本身并没有名字，所以当作用域操作符左侧为空时，向全局定义域发出请求获取右侧对应全局变量。
